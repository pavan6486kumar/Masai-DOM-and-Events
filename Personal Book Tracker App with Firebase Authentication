<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Book Tracker</title>
  <style>
    body { font-family: sans-serif; margin: 20px; }
    .hidden { display: none; }
    input, button { padding: 8px; margin: 5px; }
    .book { border: 1px solid #ccc; padding: 10px; margin: 10px 0; }
    .read { background: #d1ffd1; }
    .unread { background: #ffd1d1; }
  </style>
</head>
<body>

  <h1>üìö Personal Book Tracker</h1>

  <!-- Auth Forms -->
  <div id="auth-section">
    <input type="email" id="email" placeholder="Email" required />
    <input type="password" id="password" placeholder="Password" required />
    <br />
    <button onclick="signUp()">Sign Up</button>
    <button onclick="login()">Login</button>
  </div>

  <!-- Book Tracker -->
  <div id="book-section" class="hidden">
    <h2>Welcome, <span id="userEmail"></span>!</h2>
    <button onclick="logout()">Logout</button>
    <h3>Add New Book</h3>
    <input type="text" id="title" placeholder="Book Title" required />
    <input type="text" id="author" placeholder="Author" required />
    <button onclick="addBook()">Add Book</button>

    <h3>Your Books</h3>
    <div id="bookList"></div>
  </div>

  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js"></script>

  <script>
    // Your Firebase config here
    const firebaseConfig = {
      apiKey: "YOUR_API_KEY",
      authDomain: "YOUR_AUTH_DOMAIN",
      projectId: "YOUR_PROJECT_ID",
      appId: "YOUR_APP_ID"
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth();

    const emailEl = document.getElementById("email");
    const passwordEl = document.getElementById("password");
    const bookSection = document.getElementById("book-section");
    const authSection = document.getElementById("auth-section");
    const userEmail = document.getElementById("userEmail");
    const bookList = document.getElementById("bookList");

    let currentUser = null;
    let books = [];

    auth.onAuthStateChanged(user => {
      if (user) {
        currentUser = user;
        userEmail.innerText = user.email;
        authSection.classList.add("hidden");
        bookSection.classList.remove("hidden");
        fetchBooks();
      } else {
        currentUser = null;
        authSection.classList.remove("hidden");
        bookSection.classList.add("hidden");
      }
    });

    function signUp() {
      auth.createUserWithEmailAndPassword(emailEl.value, passwordEl.value)
        .catch(err => alert("SignUp Error: " + err.message));
    }

    function login() {
      auth.signInWithEmailAndPassword(emailEl.value, passwordEl.value)
        .catch(err => alert("Login Error: " + err.message));
    }

    function logout() {
      auth.signOut();
    }

    function addBook() {
      const title = document.getElementById("title").value;
      const author = document.getElementById("author").value;

      if (!title || !author) return alert("Please enter both title and author.");

      const newBook = {
        userId: currentUser.uid,
        title,
        author,
        read: false
      };

      fetch("https://jsonplaceholder.typicode.com/posts", {
        method: "POST",
        body: JSON.stringify(newBook),
        headers: { "Content-Type": "application/json" }
      })
      .then(res => res.json())
      .then(data => {
        books.push({ ...newBook, id: Date.now() });
        renderBooks();
      });
    }

    function fetchBooks() {
      fetch("https://jsonplaceholder.typicode.com/posts")
        .then(res => res.json())
        .then(data => {
          books = data.slice(0, 5).map((book, i) => ({
            id: i + 1,
            userId: currentUser.uid,
            title: book.title,
            author: "Author " + (i + 1),
            read: false
          }));
          renderBooks();
        });
    }

    function renderBooks() {
      bookList.innerHTML = "";
      books.forEach(book => {
        const div = document.createElement("div");
        div.className = `book ${book.read ? "read" : "unread"}`;
        div.innerHTML = `
          <b>${book.title}</b> by ${book.author}<br />
          <button onclick="toggleRead(${book.id})">${book.read ? "Mark as Unread" : "Mark as Read"}</button>
          <button onclick="deleteBook(${book.id})">‚ùå Remove</button>
        `;
        bookList.appendChild(div);
      });
    }

    function toggleRead(id) {
      books = books.map(book =>
        book.id === id ? { ...book, read: !book.read } : book
      );
      renderBooks();
    }

    function deleteBook(id) {
      fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {
        method: "DELETE"
      }).then(() => {
        books = books.filter(book => book.id !== id);
        renderBooks();
      });
    }
  </script>
</body>
</html>
